Index: .idea/pythonProject.iml
===================================================================
diff --git a/.idea/pythonProject.iml b/.idea/pythonProject.iml
deleted file mode 100644
--- a/.idea/pythonProject.iml	
+++ /dev/null	
@@ -1,10 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<module type="PYTHON_MODULE" version="4">
-  <component name="NewModuleRootManager">
-    <content url="file://$MODULE_DIR$">
-      <excludeFolder url="file://$MODULE_DIR$/venv" />
-    </content>
-    <orderEntry type="jdk" jdkName="Python 3.11 (pythonProject)" jdkType="Python SDK" />
-    <orderEntry type="sourceFolder" forTests="false" />
-  </component>
-</module>
\ No newline at end of file
Index: .idea/vcs.xml
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
deleted file mode 100644
--- a/.idea/vcs.xml	
+++ /dev/null	
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="VcsDirectoryMappings">
-    <mapping directory="$PROJECT_DIR$" vcs="Git" />
-  </component>
-</project>
\ No newline at end of file
Index: .idea/inspectionProfiles/profiles_settings.xml
===================================================================
diff --git a/.idea/inspectionProfiles/profiles_settings.xml b/.idea/inspectionProfiles/profiles_settings.xml
deleted file mode 100644
--- a/.idea/inspectionProfiles/profiles_settings.xml	
+++ /dev/null	
@@ -1,6 +0,0 @@
-<component name="InspectionProjectProfileManager">
-  <settings>
-    <option name="USE_PROJECT_PROFILE" value="false" />
-    <version value="1.0" />
-  </settings>
-</component>
\ No newline at end of file
Index: .idea/.gitignore
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
deleted file mode 100644
--- a/.idea/.gitignore	
+++ /dev/null	
@@ -1,3 +0,0 @@
-# Default ignored files
-/shelf/
-/workspace.xml
Index: .idea/modules.xml
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
deleted file mode 100644
--- a/.idea/modules.xml	
+++ /dev/null	
@@ -1,8 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="ProjectModuleManager">
-    <modules>
-      <module fileurl="file://$PROJECT_DIR$/.idea/pythonProject.iml" filepath="$PROJECT_DIR$/.idea/pythonProject.iml" />
-    </modules>
-  </component>
-</project>
\ No newline at end of file
Index: .idea/misc.xml
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
deleted file mode 100644
--- a/.idea/misc.xml	
+++ /dev/null	
@@ -1,4 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.11 (pythonProject)" project-jdk-type="Python SDK" />
-</project>
\ No newline at end of file
Index: LICENSE
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/LICENSE b/LICENSE
new file mode 100644
--- /dev/null	(date 1672280880350)
+++ b/LICENSE	(date 1672280880350)
@@ -0,0 +1,21 @@
+MIT License
+
+Copyright (c) 2022 Ze "Zack" Sun
+
+Permission is hereby granted, free of charge, to any person obtaining a copy
+of this software and associated documentation files (the "Software"), to deal
+in the Software without restriction, including without limitation the rights
+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+copies of the Software, and to permit persons to whom the Software is
+furnished to do so, subject to the following conditions:
+
+The above copyright notice and this permission notice shall be included in all
+copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
+SOFTWARE.
Index: gui.py
===================================================================
diff --git a/gui.py b/gui.py
deleted file mode 100644
--- a/gui.py	
+++ /dev/null	
@@ -1,13 +0,0 @@
-import function
-
-from PySimpleGUI import *
-from PySimpleGUI import __version__
-
-text = Text("Type in a Todo")
-input_box = InputText(tooltip="Enter a Todo")
-add_button = Button("Add")
-
-
-window = Window("Your Todos", layout=[[text], [input_box, add_button]])
-window.read()
-window.close()
Index: function.py
===================================================================
diff --git a/function.py b/function.py
deleted file mode 100644
--- a/function.py	
+++ /dev/null	
@@ -1,10 +0,0 @@
-def getListTodos(file='todos.txt'):
-    with open(file, 'r') as file_local:
-        todos_local = file_local.readlines()
-
-    return todos_local
-
-
-def writeListTodos(todos_arg, fileDest='todos.txt'):
-    with open(fileDest, 'wr') as file:
-        file.writelines(todos_arg)
Index: cli.py
===================================================================
diff --git a/cli.py b/cli.py
deleted file mode 100644
--- a/cli.py	
+++ /dev/null	
@@ -1,51 +0,0 @@
-import time
-import function
-# Press the green button in the gutter to run the script.
-now = time.strftime("%b %d, %Y %H:%M:%S")
-print("It is", now)
-while True:
-        user_action = input("Type show, add, edit, complete or exit")
-
-        if user_action.startswith("add"):
-            todo = user_action[4:]
-
-            todos = function.getListTodos()
-
-            todos.append(todo + '\n')
-
-            function.writeListTodos()
-
-        elif user_action.startswith('show'):
-            todos = function.getListTodos()
-
-            for ind, item in enumerate(todos):
-                item = item.strip('\n')
-                row = f'{ind + 1}-{item}'
-                print(row)
-
-        elif user_action.startswith('edit'):
-            try:
-                number = int(user_action[5:]) - 1
-
-                todos = function.getListTodos()
-
-                newTodo = input("Enter new todo: ")
-                todos[number] = newTodo + '\n'
-
-                function.writeListTodos()
-
-            except ValueError:
-                print("Invalid argument. Format: \'edit num\'")
-                continue
-        elif user_action.startswith("exit"):
-            print("Finishing operation.")
-            break
-
-        else:
-            print("Invalid input, aborting.")
-            continue
-
-
-
-
-# See PyCharm help at https://www.jetbrains.com/help/pycharm/
